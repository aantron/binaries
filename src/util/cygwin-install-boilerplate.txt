# Error handling.
$ErrorActionPreference = "Stop"

function CheckExitCode {
    if ($LastExitCode -ne 0) {
        throw "$args exited with $LastExitCode"
    }
}

# Cygwin.
switch ($arch) {
    "x86" {
        $setup = "C:\Cygwin\setup-x86.exe"
        $bash = "C:\Cygwin\bin\bash.exe"
    }
    "x86_64" {
        $setup = "C:\Cygwin64\setup-x86_64.exe"
        $bash = "C:\Cygwin64\bin\bash.exe"
    }
    default {
        throw "Unknown architecture $arch"
    }
}

switch ($package) {
    "ocaml" {
        echo "Installing flexdll..."
        Start-Process $setup @("-W", "-q", "-P", "flexdll") -Wait
    }
}

echo "Downloading Cygwin repository with package $package..."

$archive_name = "packages-$package.zip"
Invoke-WebRequest $archive -OutFile $archive_name
Expand-Archive $archive_name

echo "Installing $package..."

$packages_path = (Get-Item -Path "packages-$package" -Verbose).FullName
Start-Process $setup @("-W", "-q", "-L", "-l", $packages_path, "-P", $package) -Wait
# Not checking the exit code here, as it isn't set.

# Make sure the package has been installed.
switch ($package) {
    "ocaml" {
        $sanity = "ocaml -version | grep $version"
    }
    "opam" {
        $sanity = "opam --version | grep $version"
    }
    default {
        throw "Unsupported package $package"
    }
}

echo "Checking $package..."

& $bash "-lc", $sanity
CheckExitCode "sanity check"
