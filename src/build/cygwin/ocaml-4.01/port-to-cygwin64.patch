Adapted from the ocaml-4.01.0-1 package in Cygwin.

Index: asmcomp/amd64/emit.mlp
===================================================================
--- asmcomp/amd64/emit.mlp	(revision 14094)
+++ asmcomp/amd64/emit.mlp	(working copy)
@@ -22,6 +22,7 @@
 
 let macosx = (Config.system = "macosx")
 let mingw64 = (Config.system = "mingw64")
+let cygwin = (Config.system = "cygwin")
 
 let fp = Config.with_frame_pointers
 
@@ -61,17 +62,17 @@
     Emitaux.emit_symbol '$' s
 
 let emit_call s =
-  if !Clflags.dlcode && not macosx && not mingw64
+  if !Clflags.dlcode && not macosx && not mingw64 && not cygwin
   then `call	{emit_symbol s}@PLT`
   else `call	{emit_symbol s}`
 
 let emit_jump s =
-  if !Clflags.dlcode && not macosx && not mingw64
+  if !Clflags.dlcode && not macosx && not mingw64 && not cygwin
   then `jmp	{emit_symbol s}@PLT`
   else `jmp	{emit_symbol s}`
 
 let load_symbol_addr s =
-  if !Clflags.dlcode && not mingw64
+  if !Clflags.dlcode && not mingw64 && not cygwin
   then `movq	{emit_symbol s}@GOTPCREL(%rip)`
   else if !pic_code
   then `leaq	{emit_symbol s}(%rip)`
@@ -650,7 +651,7 @@
         `	jmp	*{emit_reg tmp1}\n`;
         if macosx then
           `	.const\n`
-        else if mingw64 then
+        else if mingw64 || cygwin then
           `	.section .rdata,\"dr\"\n`
         else
           `	.section .rodata\n`;
@@ -799,7 +800,7 @@
     (* from amd64.S; could emit these constants on demand *)
     if macosx then
       `	.literal16\n`
-    else if mingw64 then
+    else if mingw64 || cygwin then
       `	.section .rdata,\"dr\"\n`
     else
       `	.section .rodata.cst8,\"a\",@progbits\n`;
@@ -822,7 +823,7 @@
   if !float_constants <> [] then begin
     if macosx then
       `	.literal8\n`
-    else if mingw64 then
+    else if mingw64 || cygwin then
       `	.section .rdata,\"dr\"\n`
     else
       `	.section .rodata.cst8,\"a\",@progbits\n`;
Index: asmcomp/amd64/proc.ml
===================================================================
--- asmcomp/amd64/proc.ml	(revision 14094)
+++ asmcomp/amd64/proc.ml	(working copy)
@@ -24,7 +24,7 @@
 
 let win64 =
   match Config.system with
-  | "win64" | "mingw64" -> true
+  | "win64" | "mingw64" | "cygwin" -> true
   | _                   -> false
 
 (* Which asm conventions to use *)
Index: asmrun/amd64.S
===================================================================
--- asmrun/amd64.S	(revision 14094)
+++ asmrun/amd64.S	(working copy)
@@ -32,7 +32,7 @@
         .align FUNCTION_ALIGN; \
         name:
 
-#elif defined(SYS_mingw64)
+#elif defined(SYS_mingw64) || defined(SYS_cygwin)
 
 #define LBL(x) .L##x
 #define G(r) r
@@ -90,7 +90,7 @@
 
 #endif
 
-#if defined(__PIC__) && !defined(SYS_mingw64)
+#if defined(__PIC__) && !defined(SYS_mingw64) && !defined(SYS_cygwin)
 
 /* Position-independent operations on global variables. */
 
@@ -172,7 +172,7 @@
 /* Save and restore all callee-save registers on stack.
    Keep the stack 16-aligned. */
 
-#if defined(SYS_mingw64)
+#if defined(SYS_mingw64) || defined(SYS_cygwin)
 
 /* Win64 API: callee-save regs are rbx, rbp, rsi, rdi, r12-r15, xmm6-xmm15 */
 
@@ -242,7 +242,7 @@
 
 #endif
 
-#ifdef SYS_mingw64
+#if defined(SYS_mingw64) || defined (SYS_cygwin)
    /* Calls from OCaml to C must reserve 32 bytes of extra stack space */
 #  define PREPARE_FOR_C_CALL subq $32, %rsp; CFI_ADJUST(32)
 #  define CLEANUP_AFTER_C_CALL addq $32, %rsp; CFI_ADJUST(-32)
@@ -264,7 +264,7 @@
         CFI_STARTPROC
         RECORD_STACK_FRAME(0)
 LBL(caml_call_gc):
-#ifndef SYS_mingw64
+#if !defined(SYS_mingw64) && !defined(SYS_cygwin)
     /* Touch the stack to trigger a recoverable segfault
        if insufficient space remains */
         subq    $32768, %rsp
@@ -441,7 +441,7 @@
         STORE_VAR(%r12, caml_last_return_address)
         STORE_VAR(%rsp, caml_bottom_of_stack)
         subq    $8, %rsp; CFI_ADJUST(8) /* equivalent to pushq %r12 */
-#ifndef SYS_mingw64
+#if !defined(SYS_mingw64) && !defined(SYS_cygwin)
     /* Touch the stack to trigger a recoverable segfault
        if insufficient space remains */
         subq    $32768, %rsp
@@ -510,7 +510,7 @@
 
 /* Registers holding arguments of C functions. */
 
-#ifdef SYS_mingw64
+#if defined(SYS_mingw64) || defined(SYS_cygwin)
 #define C_ARG_1 %rcx
 #define C_ARG_2 %rdx
 #define C_ARG_3 %r8
@@ -656,7 +656,7 @@
 
 #if defined(SYS_macosx)
         .literal16
-#elif defined(SYS_mingw64)
+#elif defined(SYS_mingw64) || defined(SYS_cygwin)
         .section .rdata,"dr"
 #else
         .section    .rodata.cst8,"a",@progbits
Index: boot/ocamlc
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: boot/ocamldep
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: boot/ocamllex
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: byterun/io.c
===================================================================
--- byterun/io.c	(revision 14094)
+++ byterun/io.c	(working copy)
@@ -22,6 +22,9 @@
 #ifdef HAS_UNISTD
 #include <unistd.h>
 #endif
+#ifdef __CYGWIN__
+#include </usr/include/io.h>
+#endif
 #include "alloc.h"
 #include "custom.h"
 #include "fail.h"
Index: configure
===================================================================
--- configure	(revision 14094)
+++ configure	(working copy)
@@ -337,6 +337,10 @@
         mkexedebugflag="-link -g"
       fi
     fi
+    if test $withsharedlibs = no; then
+      mkexe="$mkexe -Wl,--stack,16777216"
+      bytecclinkopts="-Wl,--stack,16777216"
+    fi
     exe=".exe"
     ostype="Cygwin";;
   gcc*,x86_64-*-linux*)
@@ -714,6 +718,7 @@
   x86_64-*-netbsd*)             arch=amd64; system=netbsd;;
   x86_64-*-openbsd*)            arch=amd64; system=openbsd;;
   x86_64-*-darwin*)             arch=amd64; system=macosx;;
+  x86_64-*-cygwin*)             arch=amd64; system=cygwin;;
 esac
 
 # Some platforms exist both in 32-bit and 64-bit variants, not distinguished
Index: testsuite/makefiles/Makefile.common
===================================================================
--- testsuite/makefiles/Makefile.common	(revision 14094)
+++ testsuite/makefiles/Makefile.common	(working copy)
@@ -37,7 +37,7 @@
 # SORT is the Unix "sort" command. Usually a simple command, but may be an
 #   absolute name if the Windows "sort" command is in the PATH.
 # SET_LD_PATH is a command prefix that sets the path for dynamic libraries
-#   (LD_LIBRARY_PATH for Unix, PATH for Windows) using the LD_PATH shell
+#   (CAML_LD_LIBRARY_PATH for Unix, PATH for Windows) using the LD_PATH shell
 #   variable. Note that for Windows we add Unix-syntax directory names in
 #   PATH, and Cygwin will translate it to Windows syntax.
 
@@ -47,9 +47,15 @@
 
 OCFLAGS=-nostdlib -I $(OTOPDIR)/stdlib $(COMPFLAGS)
 
+ifeq ($(SUPPORTS_SHARED_LIBRARIES),false)
+  CUSTOM = -custom
+else
+  CUSTOM =
+endif
+
 OCAML=$(OCAMLRUN) $(OTOPDIR)/ocaml $(OCFLAGS) \
       -init $(OTOPDIR)/testsuite/lib/empty
-OCAMLC=$(OCAMLRUN) $(OTOPDIR)/ocamlc $(OCFLAGS)
+OCAMLC=$(OCAMLRUN) $(OTOPDIR)/ocamlc $(CUSTOM) $(OCFLAGS)
 OCAMLOPT=$(OCAMLRUN) $(OTOPDIR)/ocamlopt $(OCFLAGS)
 OCAMLDOC=$(OCAMLRUN) $(OTOPDIR)/ocamldoc/ocamldoc
 OCAMLLEX=$(OCAMLRUN) $(OTOPDIR)/lex/ocamllex
Index: testsuite/makefiles/Makefile.one
===================================================================
--- testsuite/makefiles/Makefile.one	(revision 14094)
+++ testsuite/makefiles/Makefile.one	(working copy)
@@ -27,7 +27,7 @@
 
 CUSTOM_FLAG=`if [ -n "$(C_FILES)" ]; then echo '-custom'; fi`
 ADD_CFLAGS+=$(CUSTOM_FLAG)
-MYRUNTIME=`if [ -z "$(C_FILES)" ]; then echo '$(OCAMLRUN)'; fi`
+MYRUNTIME=`if [ -z "$(C_FILES)$(CUSTOM)" ]; then echo '$(OCAMLRUN)'; fi`
 
 CC=$(NATIVECC) $(NATIVECCCOMPOPTS)
 
Index: testsuite/makefiles/Makefile.several
===================================================================
--- testsuite/makefiles/Makefile.several	(revision 14094)
+++ testsuite/makefiles/Makefile.several	(working copy)
@@ -20,7 +20,7 @@
 
 CUSTOM_FLAG=`if [ -n "$(C_FILES)" ]; then echo '-custom'; fi`
 ADD_CFLAGS+=$(CUSTOM_FLAG)
-MYRUNTIME=`if [ -z "$(C_FILES)" ]; then echo '$(OCAMLRUN)'; fi`
+MYRUNTIME=`if [ -z "$(C_FILES)$(CUSTOM)" ]; then echo '$(OCAMLRUN)'; fi`
 FORTRAN_LIB=`if [ -n "$(F_FILES)" ]; then echo '$(FORTRAN_LIBRARY)'; fi`
 ADD_CFLAGS+=$(FORTRAN_LIB)
 ADD_OPTFLAGS+=$(FORTRAN_LIB)
Index: testsuite/tests/asmcomp/amd64.S
===================================================================
--- testsuite/tests/asmcomp/amd64.S	(revision 14094)
+++ testsuite/tests/asmcomp/amd64.S	(working copy)
@@ -58,7 +58,7 @@
 
 #ifdef SYS_macosx
         .literal16
-#elif defined(SYS_mingw64)
+#elif defined(SYS_mingw64) || defined(SYS_cygwin)
         .section        .rodata.cst8
 #else
         .section        .rodata.cst8,"aM",@progbits,8
Index: testsuite/tests/asmcomp
===================================================================
--- testsuite/tests/asmcomp	(revision 14094)
+++ testsuite/tests/asmcomp	(working copy)

Property changes on: testsuite/tests/asmcomp
___________________________________________________________________
Modified: svn:ignore
## -2,9 +2,12 ##
 *.a
 *.so
 *.obj
+*.lib
+*.dll
 
-*.cm[ioxa]
+*.cm[ioxat]
 *.cmx[as]
+*.cmti
 *.annot
 
 *.result
## -11,6 +14,8 ##
 *.byte
 *.native
 program
+*.exe
+*.exe.manifest
 
 .depend
 .depend.nt
Index: testsuite/tests/lib-bigarray
===================================================================
--- testsuite/tests/lib-bigarray	(revision 14094)
+++ testsuite/tests/lib-bigarray	(working copy)

Property changes on: testsuite/tests/lib-bigarray
___________________________________________________________________
Modified: svn:ignore
## -2,9 +2,12 ##
 *.a
 *.so
 *.obj
+*.lib
+*.dll
 
-*.cm[ioxa]
+*.cm[ioxat]
 *.cmx[as]
+*.cmti
 *.annot
 
 *.result
## -11,7 +14,8 ##
 *.byte
 *.native
 program
-program.exe
+*.exe
+*.exe.manifest
 
 .depend
 .depend.nt
Index: testsuite/tests/lib-dynlink-bytecode/Makefile
===================================================================
--- testsuite/tests/lib-dynlink-bytecode/Makefile	(revision 14094)
+++ testsuite/tests/lib-dynlink-bytecode/Makefile	(working copy)
@@ -17,7 +17,11 @@
 
 .PHONY: default
 default:
-	@$(SET_LD_PATH) $(MAKE) compile run
+	@if ! $(SUPPORTS_SHARED_LIBRARIES); then \
+	  echo 'skipped (shared libraries not available)'; \
+	else \
+	  $(SET_LD_PATH) $(MAKE) compile run; \
+	fi
 
 .PHONY: compile
 compile: caml
Index: testsuite/tests/lib-dynlink-csharp/Makefile
===================================================================
--- testsuite/tests/lib-dynlink-csharp/Makefile	(revision 14094)
+++ testsuite/tests/lib-dynlink-csharp/Makefile	(working copy)
@@ -18,7 +18,11 @@
 
 .PHONY: default
 default:
-	@if $(BYTECODE_ONLY); then : ; else \
+	@if ! $(SUPPORTS_SHARED_LIBRARIES); then \
+	  echo 'skipped (shared libraries not available)'; \
+	elif $(BYTECODE_ONLY); then \
+	  echo 'skipped (native compiler not available)' ; \
+	else \
 	  $(SET_LD_PATH) $(MAKE) all; \
 	fi
 
Index: testsuite/tests/lib-dynlink-native/Makefile
===================================================================
--- testsuite/tests/lib-dynlink-native/Makefile	(revision 14094)
+++ testsuite/tests/lib-dynlink-native/Makefile	(working copy)
@@ -19,7 +19,11 @@
 
 .PHONY: default
 default:
-	@if $(BYTECODE_ONLY); then : ; else \
+	@if ! $(SUPPORTS_SHARED_LIBRARIES); then \
+	  echo 'skipped (shared libraries not available)'; \
+	elif $(BYTECODE_ONLY); then \
+	  echo 'skipped (native compiler not available)' ; \
+	else \
 	   $(SET_LD_PATH) $(MAKE) all; \
 	fi
 
Index: testsuite/tests/lib-scanf-2/Makefile
===================================================================
--- testsuite/tests/lib-scanf-2/Makefile	(revision 14094)
+++ testsuite/tests/lib-scanf-2/Makefile	(working copy)
@@ -15,6 +15,8 @@
 COMPFLAGS=-I $(OTOPDIR)/otherlibs/$(UNIXLIBVAR)unix
 LD_PATH=$(TOPDIR)/otherlibs/$(UNIXLIBVAR)unix
 
+MYRUNTIME=`if [ -z "$(CUSTOM)" ]; then echo '$(OCAMLRUN)'; fi`
+
 .PHONY: default
 default:
 	@$(SET_LD_PATH) $(MAKE) compile run
@@ -34,7 +36,7 @@
 
 run:
 	@printf " ... testing with ocamlc"
-	@$(OCAMLRUN) ./master.byte "$(OTOPDIR)/boot/ocamlrun$(EXE) \
+	@$(MYRUNTIME) ./master.byte "$(OTOPDIR)/boot/ocamlrun$(EXE) \
 	                                     `$(CYGPATH) ./slave.byte`" \
 	             >result.byte 2>&1
 	@$(DIFF) reference result.byte >/dev/null \
Index: testsuite/tests/tool-ocamldoc/Makefile
===================================================================
--- testsuite/tests/tool-ocamldoc/Makefile	(revision 14094)
+++ testsuite/tests/tool-ocamldoc/Makefile	(working copy)
@@ -18,7 +18,11 @@
 
 .PHONY: default
 default:
-	@$(SET_LD_PATH) $(MAKE) run
+	@if ! $(SUPPORTS_SHARED_LIBRARIES); then \
+	  echo 'skipped (shared libraries not available)'; \
+	else \
+	  $(SET_LD_PATH) $(MAKE) run; \
+	fi
 
 .PHONY: run
 run: $(CUSTOM_MODULE).cmo
Index: testsuite/tests/warnings
===================================================================
--- testsuite/tests/warnings	(revision 14094)
+++ testsuite/tests/warnings	(working copy)

Property changes on: testsuite/tests/warnings
___________________________________________________________________
Modified: svn:ignore
## -1,11 +1,23 ##
-# svn propset -R svn:ignore -F .svnignore .
-# find . -name .svnignore -print | while read f; do svn propset svn:ignore -F $f `dirname $f`; done
-_log
+*.o
+*.a
 *.so
-*.a
+*.obj
+*.lib
+*.dll
+
+*.cm[ioxat]
+*.cmx[as]
+*.cmti
+*.annot
+
 *.result
 *.byte
 *.native
 program
-*.cm*
-*.o
+*.exe
+*.exe.manifest
+
+.depend
+.depend.nt
+.DS_Store
+
